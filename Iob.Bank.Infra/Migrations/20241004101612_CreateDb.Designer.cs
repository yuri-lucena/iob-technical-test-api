// <auto-generated />
using System;
using Iob.Bank.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Iob.Bank.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241004101612_CreateDb")]
    partial class CreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Iob.Bank.Domain.Data.Entities.BankAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("balance");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("LastTransactionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_transaction_date");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("opening_date");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tb_bank_account");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Balance = 0m,
                            Created = new DateTime(2024, 10, 4, 7, 16, 12, 26, DateTimeKind.Local).AddTicks(2910),
                            CreatedBy = 1L,
                            OpeningDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "Conta Corrente",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Balance = 1000m,
                            Created = new DateTime(2024, 10, 4, 7, 16, 12, 26, DateTimeKind.Local).AddTicks(2933),
                            CreatedBy = 1L,
                            OpeningDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "Conta Corrente",
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("Iob.Bank.Domain.Data.Entities.BankLaunch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<long?>("DestinationAccountId")
                        .HasColumnType("bigint")
                        .HasColumnName("destination_account_id");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("modified_by");

                    b.Property<long>("OperationTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("operation_type_id");

                    b.Property<long?>("OriginAccountId")
                        .HasColumnType("bigint")
                        .HasColumnName("origin_account_id");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("DestinationAccountId");

                    b.HasIndex("OperationTypeId");

                    b.HasIndex("OriginAccountId");

                    b.ToTable("tb_bank_launch");
                });

            modelBuilder.Entity("Iob.Bank.Domain.Data.Entities.OperationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("tb_operation_type");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(2024, 10, 4, 7, 16, 12, 29, DateTimeKind.Local).AddTicks(5246),
                            CreatedBy = 1L,
                            Name = "Credit"
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(2024, 10, 4, 7, 16, 12, 29, DateTimeKind.Local).AddTicks(5265),
                            CreatedBy = 1L,
                            Name = "Debit"
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTime(2024, 10, 4, 7, 16, 12, 29, DateTimeKind.Local).AddTicks(5266),
                            CreatedBy = 1L,
                            Name = "Transfer"
                        });
                });

            modelBuilder.Entity("Iob.Bank.Domain.Data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasColumnType("longtext")
                        .HasColumnName("address");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("birthday");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Identifier")
                        .HasColumnType("longtext")
                        .HasColumnName("identifier");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext")
                        .HasColumnName("phone_number");

                    b.Property<long>("UserTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_type_id");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("tb_user");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Birthday = new DateTime(2002, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2024, 10, 4, 7, 16, 12, 29, DateTimeKind.Local).AddTicks(6086),
                            CreatedBy = 0L,
                            Email = "yuri@iob.com",
                            Identifier = "12312312323",
                            Name = "Yuri",
                            Password = "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                            UserTypeId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Birthday = new DateTime(2003, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2024, 10, 4, 7, 16, 12, 29, DateTimeKind.Local).AddTicks(6096),
                            CreatedBy = 0L,
                            Email = "tata@iob.com",
                            Identifier = "12312312323",
                            Name = "Tata",
                            Password = "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                            UserTypeId = 1L
                        });
                });

            modelBuilder.Entity("Iob.Bank.Domain.Data.Entities.UserType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("modified_by");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("tb_user_type");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(2024, 10, 4, 7, 16, 12, 29, DateTimeKind.Local).AddTicks(6624),
                            CreatedBy = 1L,
                            Description = "System administrator",
                            IsActive = true,
                            Type = "Administrator"
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(2024, 10, 4, 7, 16, 12, 29, DateTimeKind.Local).AddTicks(6626),
                            CreatedBy = 1L,
                            Description = "Customer",
                            IsActive = true,
                            Type = "Customer"
                        });
                });

            modelBuilder.Entity("Iob.Bank.Domain.Data.Entities.BankAccount", b =>
                {
                    b.HasOne("Iob.Bank.Domain.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Iob.Bank.Domain.Data.Entities.BankLaunch", b =>
                {
                    b.HasOne("Iob.Bank.Domain.Data.Entities.BankAccount", "DestinationAccount")
                        .WithMany()
                        .HasForeignKey("DestinationAccountId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Iob.Bank.Domain.Data.Entities.OperationType", "OperationType")
                        .WithMany()
                        .HasForeignKey("OperationTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Iob.Bank.Domain.Data.Entities.BankAccount", "OriginAccount")
                        .WithMany()
                        .HasForeignKey("OriginAccountId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DestinationAccount");

                    b.Navigation("OperationType");

                    b.Navigation("OriginAccount");
                });

            modelBuilder.Entity("Iob.Bank.Domain.Data.Entities.User", b =>
                {
                    b.HasOne("Iob.Bank.Domain.Data.Entities.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });
#pragma warning restore 612, 618
        }
    }
}
